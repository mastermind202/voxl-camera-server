#!/bin/bash
################################################################################
# Copyright 2021 ModalAI Inc.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# 4. The Software is used solely in conjunction with devices provided by
#    ModalAI Inc.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
################################################################################

set -e

# options set by arguments
CAM_CONFIG_ID="-1"
ENABLE_CAMERA_SERVER=1

. /home/root/.profile.d/modal_bash_formatting.sh


print_usage () {
    echo ""
    echo "Tool to configure camera server"
    echo ""
    echo "Usage:"
    echo "voxl-configure-cameras <config-id>  - set up a specific cam config"
    echo "voxl-configure-cameras sentinel_v1  - setup for Sentinel drone"
    echo "voxl-configure-cameras fpv_revB     - setup for fpv_revB"
    echo "voxl-configure-cameras starling_v2  - setup for Starling V2"
    echo "voxl-configure-cameras disable      - disables voxl-camera-server"
    echo "voxl-configure-cameras help         - show this help text"
    echo ""
    echo "If no config-id or arguments are given, the user will be"
    echo "prompted with questions to help complete configuration"
    echo ""
    echo "available camera config IDs are as follows:"
    echo ""
    qrb5165-print-camera-configs
    echo ""
    exit 0
}

parse_opts(){

    while [[ $# -gt 0 ]]; do

        ## convert argument to lower case for robustness
        arg=$(echo "$1" | tr '[:upper:]' '[:lower:]')

        ## parse arguments
        case ${arg} in
            "h"|"-h"|"help"|"--help")
                print_usage
                exit 0
                ;;
            "disable")
                if [[ "$CAM_CONFIG_ID" == "-1" ]]; then
                    CAM_CONFIG_ID=0
                fi
                ENABLE_CAMERA_SERVER=0
                ;;
            "sentinel_v1")
                CAM_CONFIG_ID=11 # 6-cam
                ENABLE_CAMERA_SERVER=1
                ;;
            "starling_v2")
                CAM_CONFIG_ID=6 # tof hires tracking
                ENABLE_CAMERA_SERVER=1
                ;;
            "fpv_revB")
                CAM_CONFIG_ID=15
                ENABLE_CAMERA_SERVER=1
                ;;
            *)
                ## all other arguments are either config id numbers or invalid
                if [[ "$arg" =~ ^[0-9]+$ ]]; then
                    CAM_CONFIG_ID=$arg
                else
                    echo "invalid option $arg"
                    print_usage
                    exit -1
                fi
        esac
        shift
    done
}

################################################################################
## actual start of execution
################################################################################

parse_opts $@

if [[ "$CAM_CONFIG_ID" == "-1" ]]; then
    echo "ERROR: missing camera config ID"
    print_usage
    exit -1
fi

################################################################################
## now actually configure everything based on the variables set above
################################################################################
echo "Camera Configuration: $CAM_CONFIG_ID"

CAM_LIST=()
NEEDS_REBOOT=""

case $CAM_CONFIG_ID in
    0) # none
        ENABLE_CAMERA_SERVER=0;
        ;;
    1) #Tracking + Stereo
        CAM_LIST+=("tracking:ov7251:2")
        CAM_LIST+=("stereo:ov7251:0:1")
        ;;
    2) # Tracking Only
        CAM_LIST+=("tracking:ov7251:0")
        ;;
    3) # Hires + Stereo + Tracking
        CAM_LIST+=("tracking:ov7251:2")
        CAM_LIST+=("hires:imx214:3")
        CAM_LIST+=("stereo:ov7251:0:1")
        ;;
    4) # Hires + Tracking
        CAM_LIST+=("tracking:ov7251:0")
        CAM_LIST+=("hires:imx214:1")
        ;;
    5) # TOF + Tracking
        CAM_LIST+=("tof:pmd-tof:0")
        CAM_LIST+=("tracking:ov7251:1")
        ;;
    6) # D0005 Starling V2 Hires + TOF + Tracking
        CAM_LIST+=("tof:pmd-tof:0")
        CAM_LIST+=("hires:imx214:1")
        CAM_LIST+=("tracking:ov7251:2")

        ## this needs a new kernel to work!
        if [ -f /usr/lib/camera/com.qti.sensormodule.m4_liteon_ov7251l_cam4.bin ]; then
            NEEDS_REBOOT=true
        fi
        if [ ! -f /usr/share/modalai/chi-cdk/D0005-V2/com.qti.sensormodule.m3_liteon_ov7251_cam3.bin ]; then
            echo "ERROR can't do Starling V2 camera config without kernel >= 1.5.6 && <1.6.0"
        fi
        cp -f /usr/share/modalai/chi-cdk/D0005-V2/com.qti.sensormodule.m3_liteon_ov7251_cam3.bin /usr/lib/camera/
        rm -f /usr/lib/camera/com.qti.sensormodule.m4_liteon_ov7251l_cam4.bin
        ;;
    7) # TOF + Stereo + Tracking
        CAM_LIST+=("tof:pmd-tof:0")
        CAM_LIST+=("tracking:ov7251:1")
        CAM_LIST+=("stereo:ov7251:2:3")
        ;;
    8) # Hires only
        CAM_LIST+=("hires:imx214:0")
        ;;
    9) # TOF only
        CAM_LIST+=("tof:pmd-tof:0")
        ;;
    10) # Stereo 7251 only
        CAM_LIST+=("stereo:ov7251:0:1")
        ;;
    11) # 6-cam
        CAM_LIST+=("tracking:ov7251:2")
        CAM_LIST+=("hires:imx214:3")
        CAM_LIST+=("stereo_front:ov7251:0:1")
        CAM_LIST+=("stereo_rear:ov7251:5:4")
        ;;
    12) # Stereo 9782 only
        CAM_LIST+=("stereo:ov9782:0:1")
        ;;
    13) # Hires + 7251 stereo
        CAM_LIST+=("hires:imx214:0")
        CAM_LIST+=("stereo:ov7251:1:2")
        ;;
    14) # Stereo 9782 + TOF + Tracking
        CAM_LIST+=("tof:pmd-tof:0")
        CAM_LIST+=("tracking:ov7251:1")
        CAM_LIST+=("stereo:ov9782:2:3")
        ;;
    15) # fpv revB dual 9782
        CAM_LIST+=("trackingL:ov9782:0")
        CAM_LIST+=("trackingR:ov9782:1")
        ;;
    *)
        echo "invalid option"
        echo "Please provide a camera configuration-id"
        echo ""
        echo "available camera configurations are as follows:"
        qrb5165-print-camera-configs
        exit -1
        ;;
esac

camera-server-config-helper ${CAM_LIST[@]}

## Enable or disable voxl-camera-server
if [ "${ENABLE_CAMERA_SERVER}" == "0" ]; then
    echo "stopping and disabling voxl-camera-server"
    systemctl disable voxl-camera-server
    systemctl stop voxl-camera-server
else
    echo "enabling voxl-camera-server"
    systemctl enable voxl-camera-server
    echo "run systemctl restart voxl-camera-server to restart the service"
fi

# make sure changes got written to disk!!!
sync

echo "Done Configuring Cameras"

if [ $NEEDS_REBOOT ]; then
    echo "Please reboot VOXL to load new drivers"
fi



exit 0
